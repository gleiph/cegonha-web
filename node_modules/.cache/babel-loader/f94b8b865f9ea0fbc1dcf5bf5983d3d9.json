{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\web\\\\cegonha-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\web\\\\cegonha-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\web\\\\cegonha-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\Desktop\\\\web\\\\cegonha-web\\\\src\\\\views\\\\Users\\\\EditUser.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport api from \"../../Services/api\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function FormDialog(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openSnack = _React$useState4[0],\n      setOpenSnack = _React$useState4[1];\n\n  var handleCloseSnack = function handleCloseSnack(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenSnack(false);\n  };\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api(\"user/\" + props.cpfUser);\n\n              case 2:\n                result = _context.sent;\n                setData(result.data[0]);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n\n  var _useState3 = useState(data.name),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setname = _useState4[1];\n\n  var _useState5 = useState(data.username),\n      _useState6 = _slicedToArray(_useState5, 2),\n      username = _useState6[0],\n      setusername = _useState6[1];\n\n  var _useState7 = useState(data.email),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setemail = _useState8[1];\n\n  var _useState9 = useState(data.cpf),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cpf = _useState10[0],\n      setcpf = _useState10[1];\n\n  var handleChange = function handleChange(event) {\n    switch (event.target.id) {\n      case 'name':\n        setname(event.target.value);\n        break;\n\n      case 'username':\n        setusername(event.target.value);\n        break;\n\n      case 'email':\n        setemail(event.target.value);\n        break;\n\n      case 'cpf':\n        setcpf(event.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var values = {\n      username: username,\n      name: name,\n      cpf: cpf,\n      email: email //password, \n\n    };\n    api.put(\"user2/\" + data.id, values).then(function (res) {\n      reload();\n      handleClose();\n      alert(\"Sucesso!!! \\n Edição realiada com sucesso!!!\");\n    }, function (error) {\n      alert(\"Erro!!! \\n A edição não foi concluída!!!\");\n    });\n  };\n\n  var reload = function reload() {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    open: openSnack,\n    autoHideDuration: 6000,\n    onClose: handleCloseSnack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleCloseSnack,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Usu\\xE1rio editado com sucesso!\")), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Editar Usu\\xE1rio\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"white\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    label: \"Nome\",\n    style: {\n      margin: 12\n    },\n    fullWidth: true,\n    onChange: handleChange,\n    defaultValue: data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"username\",\n    style: {\n      margin: 8\n    },\n    fullWidth: true,\n    label: \"Username\",\n    onChange: handleChange,\n    defaultValue: data.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    fullWidth: true,\n    style: {\n      margin: 8\n    },\n    label: \"Email\",\n    onChange: handleChange,\n    defaultValue: data.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"cpf\",\n    fullWidth: true,\n    style: {\n      margin: 8\n    },\n    label: \"CPF\",\n    onChange: handleChange,\n    defaultValue: data.cpf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Editar\")))));\n}","map":{"version":3,"sources":["C:/Users/PICHAU/Desktop/web/cegonha-web/src/views/Users/EditUser.js"],"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","GridItem","GridContainer","api","Snackbar","MuiAlert","EditIcon","Alert","props","FormDialog","open","setOpen","openSnack","setOpenSnack","handleCloseSnack","event","reason","handleClickOpen","handleClose","data","setData","fetchData","cpfUser","result","name","setname","username","setusername","email","setemail","cpf","setcpf","handleChange","target","id","value","handleSubmit","preventDefault","values","put","then","res","reload","alert","error","window","location","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport api from \"../../Services/api\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default function FormDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSnack(false);\r\n  };\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      \r\n      const result = await api(\"user/\" + props.cpfUser );\r\n      setData(result.data[0])\r\n\r\n      \r\n    };\r\n    fetchData();\r\n\r\n  }, []);\r\n\r\n  const [name, setname] = useState(data.name);\r\n  const [username, setusername] = useState(data.username);\r\n  const [email, setemail] = useState(data.email);\r\n  const [cpf, setcpf] = useState(data.cpf);\r\n\r\n  const handleChange = (event) => {\r\n    switch (event.target.id) {\r\n    case 'name':\r\n      setname( event.target.value);\r\n      break\r\n    case  'username':\r\n      setusername(event.target.value);\r\n    break;\r\n    case 'email':\r\n      setemail( event.target.value);\r\n    break;\r\n    case 'cpf':\r\n      setcpf( event.target.value);\r\n    break;\r\n    default:\r\n    break;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const values = {\r\n      username,\r\n      name,\r\n      cpf, \r\n      email,\r\n      //password, \r\n    };\r\n    api.put(`user2/` + data.id, values)\r\n      .then(res => {\r\n        reload()\r\n        handleClose()\r\n        alert(\"Sucesso!!! \\n Edição realiada com sucesso!!!\");\r\n      }, (error) => {alert(\"Erro!!! \\n A edição não foi concluída!!!\");\r\n    });\r\n      \r\n  }\r\n  const reload = () => {\r\n\r\n    window.location.reload();\r\n  };\r\n \r\n\r\n  return (\r\n    <div>\r\n      <EditIcon  onClick={handleClickOpen}/>\r\n        <Snackbar open={openSnack} autoHideDuration={6000} onClose={handleCloseSnack}>\r\n          <Alert onClose={handleCloseSnack} severity=\"success\">Usuário editado com sucesso!</Alert>\r\n        </Snackbar>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Editar Usuário</DialogTitle>\r\n        <form className='white' onSubmit={handleSubmit}>\r\n        <DialogContent>\r\n        \r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <TextField id=\"name\" label=\"Nome\" style={{ margin: 12 }} fullWidth onChange={handleChange} defaultValue={data.name}/>\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={6}>\r\n                  <TextField id=\"username\" style={{ margin: 8 }} fullWidth label=\"Username\" onChange={handleChange} defaultValue={data.username}/>\r\n                </GridItem>\r\n                <GridItem xs={12} sm={12} md={6}>\r\n                  <TextField id=\"email\" fullWidth style={{ margin: 8 }} label=\"Email\" onChange={handleChange} defaultValue={data.email}/>\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={6}>\r\n                  <TextField id=\"cpf\" fullWidth style={{ margin: 8 }} label=\"CPF\" onChange={handleChange} defaultValue={data.cpf}/>\r\n                </GridItem>\r\n              </GridContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button color=\"primary\" type=\"submit\">\r\n            Editar\r\n          </Button>\r\n        </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}